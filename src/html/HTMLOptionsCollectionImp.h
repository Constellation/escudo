// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HTMLOPTIONSCOLLECTIONIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HTMLOPTIONSCOLLECTIONIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HTMLOptionsCollection.h>
#include "HTMLCollectionImp.h"

#include <org/w3c/dom/html/HTMLCollection.h>
#include <org/w3c/dom/html/HTMLElement.h>
#include <org/w3c/dom/html/HTMLOptGroupElement.h>
#include <org/w3c/dom/html/HTMLOptionElement.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HTMLOptionsCollectionImp : public ObjectMixin<HTMLOptionsCollectionImp, HTMLCollectionImp>
{
public:
    // HTMLOptionsCollection
    unsigned int getLength();
    void setLength(unsigned int length);
    Object namedItem(const std::u16string& name);
    void setElement(unsigned int index, html::HTMLOptionElement option);
    void add(Any element);
    void add(Any element, Any before);
    void remove(int index);
    int getSelectedIndex();
    void setSelectedIndex(int selectedIndex);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HTMLOptionsCollection::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HTMLOptionsCollection::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HTMLOPTIONSCOLLECTIONIMP_H_INCLUDED
