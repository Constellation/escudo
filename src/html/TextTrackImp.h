// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_TEXTTRACKIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_TEXTTRACKIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/TextTrack.h>
#include "EventTargetImp.h"

#include <org/w3c/dom/events/EventTarget.h>
#include <org/w3c/dom/events/EventHandlerNonNull.h>
#include <org/w3c/dom/html/TextTrackCueList.h>
#include <org/w3c/dom/html/TextTrackCue.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class TextTrackImp : public ObjectMixin<TextTrackImp, EventTargetImp>
{
public:
    // TextTrack
    std::u16string getKind();
    std::u16string getLabel();
    std::u16string getLanguage();
    std::u16string getInBandMetadataTrackDispatchType();
    html::TextTrackMode getMode();
    void setMode(html::TextTrackMode mode);
    html::TextTrackCueList getCues();
    html::TextTrackCueList getActiveCues();
    void addCue(html::TextTrackCue cue);
    void removeCue(html::TextTrackCue cue);
    events::EventHandlerNonNull getOncuechange();
    void setOncuechange(events::EventHandlerNonNull oncuechange);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::TextTrack::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::TextTrack::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_TEXTTRACKIMP_H_INCLUDED
