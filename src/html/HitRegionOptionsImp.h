// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_HITREGIONOPTIONSIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_HITREGIONOPTIONSIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/html/HitRegionOptions.h>

#include <org/w3c/dom/html/Path.h>
#include <org/w3c/dom/Element.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class HitRegionOptionsImp : public ObjectMixin<HitRegionOptionsImp>
{
public:
    // HitRegionOptions
    html::Path getPath();
    void setPath(html::Path path);
    std::u16string getId();
    void setId(const std::u16string& id);
    Nullable<std::u16string> getParentID();
    void setParentID(const Nullable<std::u16string>& parentID);
    std::u16string getCursor();
    void setCursor(const std::u16string& cursor);
    Element getControl();
    void setControl(Element control);
    Nullable<std::u16string> getLabel();
    void setLabel(const Nullable<std::u16string>& label);
    Nullable<std::u16string> getRole();
    void setRole(const Nullable<std::u16string>& role);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return html::HitRegionOptions::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return html::HitRegionOptions::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_HITREGIONOPTIONSIMP_H_INCLUDED
