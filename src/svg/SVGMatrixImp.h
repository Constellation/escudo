// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_SVGMATRIXIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_SVGMATRIXIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/svg/SVGMatrix.h>

#include <org/w3c/dom/svg/SVGMatrix.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class SVGMatrixImp : public ObjectMixin<SVGMatrixImp>
{
public:
    // SVGMatrix
    float getA();
    void setA(float a);
    float getB();
    void setB(float b);
    float getC();
    void setC(float c);
    float getD();
    void setD(float d);
    float getE();
    void setE(float e);
    float getF();
    void setF(float f);
    svg::SVGMatrix multiply(svg::SVGMatrix secondMatrix);
    svg::SVGMatrix inverse();
    svg::SVGMatrix translate(float x, float y);
    svg::SVGMatrix scale(float scaleFactor);
    svg::SVGMatrix scaleNonUniform(float scaleFactorX, float scaleFactorY);
    svg::SVGMatrix rotate(float angle);
    svg::SVGMatrix rotateFromVector(float x, float y);
    svg::SVGMatrix flipX();
    svg::SVGMatrix flipY();
    svg::SVGMatrix skewX(float angle);
    svg::SVGMatrix skewY(float angle);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return svg::SVGMatrix::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return svg::SVGMatrix::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_SVGMATRIXIMP_H_INCLUDED
