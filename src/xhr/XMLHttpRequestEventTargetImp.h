// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_XMLHTTPREQUESTEVENTTARGETIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_XMLHTTPREQUESTEVENTTARGETIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/XMLHttpRequestEventTarget.h>
#include "EventTargetImp.h"

#include <org/w3c/dom/events/EventTarget.h>
#include <org/w3c/dom/events/EventHandlerNonNull.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class XMLHttpRequestEventTargetImp : public ObjectMixin<XMLHttpRequestEventTargetImp, EventTargetImp>
{
public:
    // XMLHttpRequestEventTarget
    events::EventHandlerNonNull getOnloadstart();
    void setOnloadstart(events::EventHandlerNonNull onloadstart);
    events::EventHandlerNonNull getOnprogress();
    void setOnprogress(events::EventHandlerNonNull onprogress);
    events::EventHandlerNonNull getOnabort();
    void setOnabort(events::EventHandlerNonNull onabort);
    events::EventHandlerNonNull getOnerror();
    void setOnerror(events::EventHandlerNonNull onerror);
    events::EventHandlerNonNull getOnload();
    void setOnload(events::EventHandlerNonNull onload);
    events::EventHandlerNonNull getOntimeout();
    void setOntimeout(events::EventHandlerNonNull ontimeout);
    events::EventHandlerNonNull getOnloadend();
    void setOnloadend(events::EventHandlerNonNull onloadend);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return XMLHttpRequestEventTarget::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return XMLHttpRequestEventTarget::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_XMLHTTPREQUESTEVENTTARGETIMP_H_INCLUDED
