// Generated by esidl 0.3.0.
// This file is expected to be modified for the Web IDL interface
// implementation.  Permission to use, copy, modify and distribute
// this file in any software license is hereby granted.

#ifndef ORG_W3C_DOM_BOOTSTRAP_MUTATIONOBSERVERINITIMP_H_INCLUDED
#define ORG_W3C_DOM_BOOTSTRAP_MUTATIONOBSERVERINITIMP_H_INCLUDED

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <org/w3c/dom/events/MutationObserverInit.h>

namespace org
{
namespace w3c
{
namespace dom
{
namespace bootstrap
{
class MutationObserverInitImp : public ObjectMixin<MutationObserverInitImp>
{
public:
    // MutationObserverInit
    bool getChildList();
    void setChildList(bool childList);
    bool getAttributes();
    void setAttributes(bool attributes);
    bool getCharacterData();
    void setCharacterData(bool characterData);
    bool getSubtree();
    void setSubtree(bool subtree);
    bool getAttributeOldValue();
    void setAttributeOldValue(bool attributeOldValue);
    bool getCharacterDataOldValue();
    void setCharacterDataOldValue(bool characterDataOldValue);
    Sequence<std::u16string> getAttributeFilter();
    void setAttributeFilter(Sequence<std::u16string> attributeFilter);
    // Object
    virtual Any message_(uint32_t selector, const char* id, int argc, Any* argv)
    {
        return events::MutationObserverInit::dispatch(this, selector, id, argc, argv);
    }
    static const char* const getMetaData()
    {
        return events::MutationObserverInit::getMetaData();
    }
};

}
}
}
}

#endif  // ORG_W3C_DOM_BOOTSTRAP_MUTATIONOBSERVERINITIMP_H_INCLUDED
